<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Mon, 28 Sep 2015 13:28:02 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_calendar_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['bbCodeEvent'] = array('timeNoEnd','hasEnds','hasEndTimeAndStart','singleDayTime','hasEndTimeNoEnds');
$this->_funcHooks['boardIndexCalEvents'] = array('hasCalendar','upcomingevents','calendarEventsInner','calendarEventsOuter');
$this->_funcHooks['cal_date_cell'] = array('isUrl','isUrl','datecellqueued');
$this->_funcHooks['cal_date_cell_today'] = array('isUrl','isUrl','todayqueued');
$this->_funcHooks['cal_week_dayentry'] = array('weekdayentryqueued');
$this->_funcHooks['calendar_likeSummaryContents'] = array('likeOnlyMembers');
$this->_funcHooks['calendarBirthdayList'] = array('age','addfriend','notus','sendpm','blog','gallery','rate1','rate2','rate3','rate4','rate5','rating','norep','posrep','negrep','repson','members','showmembers');
$this->_funcHooks['calendarEventForm'] = array('startIsAm','startIsPm','usestandardstart','endIsAm','endIsPm','usestandardend','recurDaily','recurMonthly','recurYearly','isAllDay','hasEndDate','isRecurring','rsvpset','canaskrsvp','isPublic','isPrivate','allGroups','acpaccess','hassmilies','upload_form_check');
$this->_funcHooks['calendarEventsList'] = array('weekcalendars','disablelightbox','hassomething','calendarsforweek');
$this->_funcHooks['calendarJump'] = array('calendars','gotcalendars');
$this->_funcHooks['calendarMainContent'] = array('days','calendars','gotcalendars');
$this->_funcHooks['calendarWeekView'] = array('weekcalendars','calendarsforweek');
$this->_funcHooks['calEventFollowedWrapper'] = array('followedResults');
$this->_funcHooks['calEventSearchResult'] = array('showCalendarContent','isFollowed','singleDayTime','hasEnds','hasEndTimeAndStart','singleDayTime','hasEndTimeNoEnds');
$this->_funcHooks['event_likeSummaryContents'] = array('likeOnlyMembers');
$this->_funcHooks['eventAttendee'] = array('deletersvp');
$this->_funcHooks['followedContentCalendars'] = array('followedResults');
$this->_funcHooks['mini_cal_date_cell'] = array('isUrl');
$this->_funcHooks['mini_cal_date_cell_today'] = array('isUrl');
$this->_funcHooks['miniCalendarWrapper'] = array('minidays');
$this->_funcHooks['modEventsWrapper'] = array('event','hasevents');
$this->_funcHooks['showEvent'] = array('attendees','disablelightbox','eventnotapproved','rate1','rate2','rate3','rate4','rate5','hasRates','youRated','jsHasRates','rate1','rate2','rate3','rate4','rate5','hasRatesNoRate','canrate','eventmember','onlineoffline','hasattendees','notalreadyrsvp','canrsvp','showrsvpdiv','hasrsvp','hasEndTimeEnds','hasEndTime','hasEnds','hasNoRep','hasPosRep','hasNegRep','giveRepUp','giveRepDown','hasNotGivenRep','canRep','reputationBox','reportpost','canedit','apporunapp','canapprove');
$this->_funcHooks['showEventSimple'] = array('eventnotapproved','rate1','rate2','rate3','rate4','rate5','hasEndTimeEnds','hasEndTime','hasEnds');


}

/* -- bbCodeEvent --*/
function bbCodeEvent($event=array(), $type='', $ends='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['bbCodeEvent'] ) )
{
$count_924ad21ccc57612f6dcbcab966c128eb = is_array($this->functionData['bbCodeEvent']) ? count($this->functionData['bbCodeEvent']) : 0;
$this->functionData['bbCodeEvent'][$count_924ad21ccc57612f6dcbcab966c128eb]['event'] = $event;
$this->functionData['bbCodeEvent'][$count_924ad21ccc57612f6dcbcab966c128eb]['type'] = $type;
$this->functionData['bbCodeEvent'][$count_924ad21ccc57612f6dcbcab966c128eb]['ends'] = $ends;
}
$IPBHTML .= "<div class='_sharedMediaBbcode'>
	<div class='bbcode_mediaWrap clearfix'>
		<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\"><img src='{$this->settings['img_url']}/sharedmedia/events.png' alt='{$this->lang->words['event_img_alt']}' class='sharedmedia_image' /></a>
		<div class='details'>
			<h5><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\">" . IPSText::truncate( $event['event_title'], 60 ) . "</a></h5>
			<div><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$event['cal_id']}", "public",'' ), "{$event['cal_title_seo']}", "cal_calendar" ) . "\">{$this->lang->words['event_calendar']} {$event['cal_title']}</a></div>
			<div>{$event['_start_date']} 
				" . ((!$ends) ? ("{$event['_event_time']}") : ("")) . " 
				" . (($ends) ? ("{$ends} ") : ("")) . " 
				" . (($ends AND $event['_event_time']) ? ("{$event['_event_time']} " . (($event['_event_etime']) ? ("- {$event['_event_etime']}") : ("")) . "") : ("")) . "
				" . (($event['_event_etime'] AND !$ends) ? ("- {$event['_event_etime']}") : ("")) . "
				({$type})</div>
		</div>
	</div>
</div>
<br />";
return $IPBHTML;
}

/* -- boardIndexBirthdays --*/
function boardIndexBirthdays($birthdays, $data=array()) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- boardIndexCalEvents --*/
function boardIndexCalEvents($events) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['boardIndexCalEvents'] ) )
{
$count_bdd319465cda6052685924c4c0224f55 = is_array($this->functionData['boardIndexCalEvents']) ? count($this->functionData['boardIndexCalEvents']) : 0;
$this->functionData['boardIndexCalEvents'][$count_bdd319465cda6052685924c4c0224f55]['events'] = $events;
}
$IPBHTML .= "" . (($events OR !$this->settings['autohide_calendar']) ? ("<div class='ipsSideBlock clearfix'>
		<h3>{$this->lang->words['upcoming_events']}</h3>
		<div class='_sbcollapsable'>
			" . ((is_array( $events )) ? ("
				<ul itemscope itemtype=\"http://schema.org/Event\" class='ipsList_withminiphoto'>
					".$this->__f__ad24b6f5deb1736025e70a3025946511($events)."				</ul>
			") : ("
				<span class='desc'>{$events}</span>
			")) . "
		</div>
	</div>") : ("")) . "";
return $IPBHTML;
}


function __f__ad24b6f5deb1736025e70a3025946511($events)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $events as $event )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li class='clearfix'>
							" . ((is_array($event['calendar'])) ? ("
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$event['calendar']['cal_id']}", "public",'' ), "{$event['calendar']['cal_title_seo']}", "cal_calendar" ) . "\"><span class='ipsBadge ipsBadge_lightgrey'>{$event['calendar']['cal_title']}</span></a>
							") : ("")) . "
							<a itemprop=\"url\" href='{$event['url']}' title='{$event['date']}'><span itemprop=\"name\">{$event['title']}</span></a>
							<br /> <span class='date ipsType_small desc'>{$this->lang->words['next_occurrence']} {$event['date']}</span>
							<meta itemprop=\"startDate\" content=\"{$event['isoDate']}\" />
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- cal_blank_cell --*/
function cal_blank_cell() {
$IPBHTML = "";
$IPBHTML .= "<td class=\"blank\"><!-- no content --></td>";
return $IPBHTML;
}

/* -- cal_date_cell --*/
function cal_date_cell($day=array(),$events="",$cal_date_queued="",$queued=0, $js_id) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['cal_date_cell'] ) )
{
$count_4d6972d07db66af42baf2953bc6c8488 = is_array($this->functionData['cal_date_cell']) ? count($this->functionData['cal_date_cell']) : 0;
$this->functionData['cal_date_cell'][$count_4d6972d07db66af42baf2953bc6c8488]['day'] = $day;
$this->functionData['cal_date_cell'][$count_4d6972d07db66af42baf2953bc6c8488]['events'] = $events;
$this->functionData['cal_date_cell'][$count_4d6972d07db66af42baf2953bc6c8488]['cal_date_queued'] = $cal_date_queued;
$this->functionData['cal_date_cell'][$count_4d6972d07db66af42baf2953bc6c8488]['queued'] = $queued;
$this->functionData['cal_date_cell'][$count_4d6972d07db66af42baf2953bc6c8488]['js_id'] = $js_id;
}
$IPBHTML .= "<!--Day-->
" . (($queued != 0) ? ("<td id='{$js_id}' class=\"moderated normal\" data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "</strong>
	<a href=\"{$cal_date_queued}\">" . $this->registry->getClass('output')->getReplacement("t_queued") . "</a>") : ("<td id='{$js_id}' class='normal' data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "</strong>")) . "
	{$events}
</td>";
return $IPBHTML;
}

/* -- cal_date_cell_today --*/
function cal_date_cell_today($day=array(),$events="",$cal_date_queued="",$queued=0, $js_id) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['cal_date_cell_today'] ) )
{
$count_45c847b5f450c8bd905458315a420285 = is_array($this->functionData['cal_date_cell_today']) ? count($this->functionData['cal_date_cell_today']) : 0;
$this->functionData['cal_date_cell_today'][$count_45c847b5f450c8bd905458315a420285]['day'] = $day;
$this->functionData['cal_date_cell_today'][$count_45c847b5f450c8bd905458315a420285]['events'] = $events;
$this->functionData['cal_date_cell_today'][$count_45c847b5f450c8bd905458315a420285]['cal_date_queued'] = $cal_date_queued;
$this->functionData['cal_date_cell_today'][$count_45c847b5f450c8bd905458315a420285]['queued'] = $queued;
$this->functionData['cal_date_cell_today'][$count_45c847b5f450c8bd905458315a420285]['js_id'] = $js_id;
}
$IPBHTML .= "<!--Day-->
" . (($queued != 0) ? ("<td id='{$js_id}' class=\"today moderated\" data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
 	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . ": {$this->lang->words['today_title']}</strong> 
 	<a href=\"{$cal_date_queued}\">" . $this->registry->getClass('output')->getReplacement("t_queued") . "</a>") : ("<td id='{$js_id}' class=\"today\" data-furl=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . ": {$this->lang->words['today_title']}</strong>")) . "
	{$events}
</td>";
return $IPBHTML;
}

/* -- cal_day_bit --*/
function cal_day_bit($day="", $id='') {
$IPBHTML = "";
$IPBHTML .= "<td id='{$id}'><strong>{$day}</strong></td>";
return $IPBHTML;
}

/* -- cal_events_wrap --*/
function cal_events_wrap($event, $type='month') {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal vevent'>
	<a class='summary url' itemprop=\"url\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\" title='{$this->lang->words['view_event']}'><span itemprop=\"name\">{$event['event_title']}</span></a>
	<abbr class='dtstart hide' title=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr>
	<meta itemprop=\"startDate\" content=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">
</li>";
return $IPBHTML;
}

/* -- cal_events_wrap_manual --*/
function cal_events_wrap_manual($urlBits,$text="") {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal'>
	<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;{$urlBits['url']}", "public",'' ), "{$urlBits['title']}", "{$urlBits['template']}" ) . "\" title='{$this->lang->words['view_event']}'>{$text}</a>
</li>";
return $IPBHTML;
}

/* -- cal_events_wrap_range --*/
function cal_events_wrap_range($event, $type='month') {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal vevent'>
	<a class'summary url' itemprop=\"url\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\" title='{$this->lang->words['view_event']}'><span itemprop=\"name\">{$event['event_title']}</span></a>
	<abbr class='dtstart hide' title=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr>
	<meta itemprop=\"startDate\" content=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">
</li>";
return $IPBHTML;
}

/* -- cal_events_wrap_recurring --*/
function cal_events_wrap_recurring($event, $type='month') {
$IPBHTML = "";
$IPBHTML .= "<li itemscope itemtype=\"http://schema.org/Event\" class='cal vevent'>
	<a class='summary url' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "\" title=\"{$this->lang->words['tbt_recur']}\"><span itemprop=\"name\">{$event['event_title']}</span></a>
	<abbr class='dtstart hide' title=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr>
	<meta itemprop=\"startDate\" content=\"" . date( 'c', strtotime( $event['event_start_date'] ) ) . "\">
</li>";
return $IPBHTML;
}

/* -- cal_new_row --*/
function cal_new_row($week, $calendar) {
$IPBHTML = "";

$this->row_class = ( $this->row_class == 'row1' ) ? 'row2' : 'row1';
$IPBHTML .= "</tr>
<!-- NEW ROW--><tr class='{$this->row_class}' data-week=\"{$week}\">";
return $IPBHTML;
}

/* -- cal_week_dayentry --*/
function cal_week_dayentry($wday="",$date="",$month="",$mid="",$year="",$events="",$queued=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['cal_week_dayentry'] ) )
{
$count_9bb69cde6049e63d1ee1c7e39aea6ada = is_array($this->functionData['cal_week_dayentry']) ? count($this->functionData['cal_week_dayentry']) : 0;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['wday'] = $wday;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['date'] = $date;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['month'] = $month;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['mid'] = $mid;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['year'] = $year;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['events'] = $events;
$this->functionData['cal_week_dayentry'][$count_9bb69cde6049e63d1ee1c7e39aea6ada]['queued'] = $queued;
}

$this->week_view = ( $this->week_view == 'row1' ) ? 'row2' : 'row1';
$IPBHTML .= " 
<tr class='day {$this->week_view} " . (($queued != 0) ? ("{$this->lang->words['moderated']}") : ("")) . "'>
	<td class='col_cal_date'>
		{$date}<br />
		<span class='desc'>{$wday}</span>
	</td>
	<td class='col_cal_data normal' id='day-{$year}-{$mid}-{$date}'>
		<ul>
			{$events}
		</ul>
	</td>
</tr>";
return $IPBHTML;
}

/* -- cal_week_events_wrap --*/
function cal_week_events_wrap($linkdata,$text="") {
$IPBHTML = "";
$IPBHTML .= "<li class='cal vevent'>
	<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$linkdata['cal_id']}&amp;do=showday&amp;y={$linkdata['y']}&amp;m={$linkdata['m']}&amp;d={$linkdata['d']}", "public",'' ), "{$linkdata['seotitle']}", "cal_day" ) . "\" title='{$this->lang->words['view_event']}'>{$text}</a>
</li>";
return $IPBHTML;
}

/* -- cal_week_monthbar --*/
function cal_week_monthbar($month="",$year="") {
$IPBHTML = "";
$IPBHTML .= "<tr class='header'>
	<th class='month_bar' colspan='2'>
		{$month} {$year}
	</th>
</tr>";
return $IPBHTML;
}

/* -- calendar_likeSummary --*/
function calendar_likeSummary($data, $relId, $opts) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<div class='__like right' data-app=\"{$data['app']}\" data-area=\"{$data['area']}\" data-relid=\"{$relId}\" data-isfave=\"{$data['iLike']}\">
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'calendar_likeSummaryContents' ) ? $this->registry->getClass('output')->getTemplate('calendar')->calendar_likeSummaryContents($data, $relId, $opts) : '' ) . "
</div>
<script type=\"text/javascript\">
	var FAVE_TEMPLATE = new Template( \"<h3>" . sprintf( $this->lang->words['unset_fave_title'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "</h3><div class='ipsPad'><span class='desc'>" . sprintf( $this->lang->words['unset_fave_words'], $this->lang->words['like_un' . $data['vernacular'] ]) . "</span><br /><p class='ipsForm_center'><input type='button' value='" . sprintf( $this->lang->words['unset_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "' class='input_submit _funset' /></p></div>\");
</script>";
return $IPBHTML;
}

/* -- calendar_likeSummaryContents --*/
function calendar_likeSummaryContents($data, $relId, $opts=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendar_likeSummaryContents'] ) )
{
$count_17ca4554309f95e02ce4ddf108b58564 = is_array($this->functionData['calendar_likeSummaryContents']) ? count($this->functionData['calendar_likeSummaryContents']) : 0;
$this->functionData['calendar_likeSummaryContents'][$count_17ca4554309f95e02ce4ddf108b58564]['data'] = $data;
$this->functionData['calendar_likeSummaryContents'][$count_17ca4554309f95e02ce4ddf108b58564]['relId'] = $relId;
$this->functionData['calendar_likeSummaryContents'][$count_17ca4554309f95e02ce4ddf108b58564]['opts'] = $opts;
}
$IPBHTML .= "<span class='ipsButton_extra right " . (($data['totalCount']) ? ("_fmore clickable") : ("")) . "' title='" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "' data-tooltip=\"" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "\"><img src='{$this->settings['img_url']}/icon_users.png' /> <strong>{$data['totalCount']}</strong></span>
" . (($this->memberData['member_id']) ? ("<a href='#' title=\"" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['fave_tt_on'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['fave_tt_off'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "\" class='ftoggle ipsButton_secondary'>" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['unset_fave_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['set_fave_button'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "</a>") : ("")) . "";
return $IPBHTML;
}

/* -- calendar_rss_range --*/
function calendar_rss_range($event) {
$IPBHTML = "";
$IPBHTML .= "<p>{$event['event_content']}{$event['event_attach_content']}</p>
<br />
<p>{$this->lang->words['c_ranged']}
<br />{$this->lang->words['c_fromcolon']} {$event['_start_date']}
<br />{$this->lang->words['c_tocolon']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($event['_end_time'],"DATE", 0)) . "</p>";
return $IPBHTML;
}

/* -- calendar_rss_recurring --*/
function calendar_rss_recurring($event) {
$IPBHTML = "";
$IPBHTML .= "<p>{$event['event_content']}{$event['event_attach_content']}</p>
<br />
<p>{$this->lang->words['c_recurring']}
<br />{$this->lang->words['c_fromcolon']} {$event['_start_date']}
<br />{$this->lang->words['c_tocolon']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($event['_end_time'],"DATE", 0)) . "</p>";
return $IPBHTML;
}

/* -- calendar_rss_single --*/
function calendar_rss_single($event) {
$IPBHTML = "";
$IPBHTML .= "<p>{$event['event_content']}{$event['event_attach_content']}</p>
<br />
<p>{$this->lang->words['c_singleday']} {$event['_start_date']}</p>";
return $IPBHTML;
}

/* -- calendarBirthdayList --*/
function calendarBirthdayList($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarBirthdayList'] ) )
{
$count_b3f5094a16422fa3ed84ef168d01044b = is_array($this->functionData['calendarBirthdayList']) ? count($this->functionData['calendarBirthdayList']) : 0;
$this->functionData['calendarBirthdayList'][$count_b3f5094a16422fa3ed84ef168d01044b]['rows'] = $rows;
}

if ( ! isset( $this->registry->templateStriping['memberStripe'] ) ) {
$this->registry->templateStriping['memberStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
<h2 class='maintitle'>{$this->lang->words['cal_birthdays']}</h2>
<div id='member_list' class='clear block_wrap'>
	<div id='member_wrap'>
		<ul class='members'>
			" . ((is_array( $rows ) and count( $rows )) ? ("
								".$this->__f__a9cce88671b7e7c4d44e811346b7d19a($rows)."			") : ("
				<p class='no_messages'>{$this->lang->words['no_results']}</p>
			")) . "
		</ul>
	</div>
</div>";
return $IPBHTML;
}


function __f__a9cce88671b7e7c4d44e811346b7d19a($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li id='member_id_{$member['member_id']}' class='general_box clear member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
						<h3 class='bar'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</h3>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><img src='{$member['pp_small_photo']}' width='{$member['pp_small_width']}' height='{$member['pp_small_height']}' alt=\"" . sprintf($this->lang->words['users_photo'],$member['members_display_name']) . "\" class='photo' /></a>	
					
						<dl class='info'>
							<dt class='clear'>{$this->lang->words['member_joined']}:</dt>
							<dd>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0)) . "</dd>
							<dt class='clear'>{$this->lang->words['member_group']}:</dt>
							<dd>" . IPSMember::makeNameFormatted( $member['group'], $member['member_group_id'] ) . "</dd>
							<dt class='clear'>{$this->lang->words['age_suffix']}:</dt>
							<dd>" . (($member['age']) ? ("{$member['age']}") : ("<em>{$this->lang->words['age_not_avail']}</em>")) . "</dd>
						</dl>
						
						<ul class='user_controls clear'>
							" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
									<li class='mini_friend_toggle is_friend' id='friend_mlist_{$member['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a></li>
								") : ("
									<li class='mini_friend_toggle is_not_friend' id='friend_mlist_{$member['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>								
								")) . "") : ("")) . "
							" . (($this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' ) && $member['member_id'] != $this->memberData['member_id']) ? ("
								<li class='pm_button' id='pm_xxx_{$member['pp_member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$member['pp_member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_member']}'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
							") : ("")) . "
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['gbl_find_my_content']}'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . "</a></li>
							" . (($member['has_blog'] AND IPSLib::appIsInstalled( 'blog' )) ? ("
								<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;show_members_blogs={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_blog']}'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
							") : ("")) . "
							" . (($member['has_gallery'] AND IPSLib::appIsInstalled( 'gallery' )) ? ("
								<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;module=user&amp;section=user&amp;user={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_gallery']}'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
							") : ("")) . "
						</ul>
						" . (($this->settings['pp_allow_member_rate']) ? ("<p class='rating'> 
								" . (($member['pp_rating_real'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($member['pp_rating_real'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
							</p>") : ("")) . "
						
						" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($member['pp_reputation_points'] == 0 || !$member['pp_reputation_points']) ? ("
								<p class='reputation zero'>
							") : ("")) . "
							" . (($member['pp_reputation_points'] > 0) ? ("
								<p class='reputation positive'>
							") : ("")) . "
							" . (($member['pp_reputation_points'] < 0) ? ("
								<p class='reputation negative'>
							") : ("")) . "							
									<span class='number'>{$this->lang->words['reputation']}: {$member['pp_reputation_points']}</span>
								</p>") : ("")) . "						
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarEventForm --*/
function calendarEventForm($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarEventForm'] ) )
{
$count_88f8a426d9b7f6e83710f3cd552a3f48 = is_array($this->functionData['calendarEventForm']) ? count($this->functionData['calendarEventForm']) : 0;
$this->functionData['calendarEventForm'][$count_88f8a426d9b7f6e83710f3cd552a3f48]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<script type='text/javascript'>
	ipb.calendar.inSection	= 'form';
	ipb.calendar.startYear	= parseInt('{$this->settings['start_year']}');
	ipb.calendar.yearLimit	= parseInt('{$this->settings['year_limit']}');
</script>
<div class='post_form'>
<form id='postingform' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=calendar&amp;section=post&amp;do={$data['code']}&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "", "" ) . "\" method=\"post\">
	<input type=\"hidden\" name=\"event_id\" value=\"{$data['event']['event_id']}\" />
	<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
	<input type=\"hidden\" name=\"post_key\" value=\"{$data['event']['event_post_key']}\" />
	
	<h2 class='maintitle'>{$this->lang->words['post_new_event']}</h2>
	<div class='generic_bar'></div>
	
	<fieldset>
		<h3 class='bar'>{$this->lang->words['event_details']}</h3>
		<ul>
			<li class='field'>
				<label for='event_title'>{$this->lang->words['calendar_title']}</label>
				<input type='text' id='event_title' class='input_text' name='event_title' value=\"{$data['event']['event_title']}\" size='50' maxlength='50' />
			</li>
			
			<li class='field'>
				<label for='start_date'>{$this->lang->words['fv_single']}</label>
				<input type='text' size='15' name='start_date' id='start_date' class='input_text date' value='{$data['dates']['ndate']}' />
				<img src='{$this->settings['img_url']}/date.png' alt='' id='start_date_icon' style='cursor: pointer' /> 
				<span class='time_setting'>
					&nbsp;&nbsp;
					<input class='input_text' type='text' size='5' id='start_time' name='start_time' value='{$data['dates']['nh']}:{$data['dates']['nmi']}' />
					
					" . (($this->settings['cal_time_format'] == 'standard') ? ("<select name='start_time_ampm' id='start_time_ampm' class='input_select'>
							<option value='AM'" . (($data['dates']['nap'] == 'AM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_am']}</option>
							<option value='PM'" . (($data['dates']['nap'] == 'PM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_pm']}</option>
						</select>") : ("")) . "
					<select name='event_timezone' class='event_timezone'>
						{$data['_time_zones']}
					</select>
				</span>
			</li>
			<li class='field' id='end_date_fields'>
				<label for='end_date'>{$this->lang->words['fv_range_ends']}</label>
				<input type='text' size='15' name='end_date' id='end_date' class='input_text date' value='{$data['dates']['edate']}' />
				<img src='{$this->settings['img_url']}/date.png' alt='' id='end_date_icon' style='cursor: pointer' /> 
				<span class='time_setting'>
					&nbsp;&nbsp;
					<input class='input_text' type='text' size='5' id='end_time' name='end_time' value='{$data['dates']['fh']}:{$data['dates']['fmi']}' />
					
					" . (($this->settings['cal_time_format'] == 'standard') ? ("<select name='end_time_ampm' id='end_time_ampm' class='input_select'>
							<option value='AM'" . (($data['dates']['fap'] == 'AM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_am']}</option>
							<option value='PM'" . (($data['dates']['fap'] == 'PM') ? (" selected='selected'") : ("")) . ">{$this->lang->words['time_pm']}</option>
						</select>") : ("")) . "
				</span>
			</li>
			
			<li class='field' id='recur_fields'>
				<label for='recur_unit'>{$this->lang->words['fv_recur']}</label>
				{$this->lang->words['fv_recur_every']} 
				<select class='input_select' name=\"recur_unit\" id='recur_unit'>
					<option value='1'" . (($data['event']['event_recurring'] == 1) ? (" selected='selected'") : ("")) . ">{$this->lang->words['fv_days']}</option>
					<option value='2'" . (($data['event']['event_recurring'] == 2) ? (" selected='selected'") : ("")) . ">{$this->lang->words['fv_months']}</option>
					<option value='3'" . (($data['event']['event_recurring'] == 3) ? (" selected='selected'") : ("")) . ">{$this->lang->words['fv_years']}</option>
				</select>
			</li>
			<li class='field checkbox'>
				<input class='input_check' type='checkbox' id='all_day' name='all_day'" . (($data['dates']['allday']) ? (" checked='checked'") : ("")) . " value='1' /> 
				<label for='set_times'>{$this->lang->words['form_set_times']}</label>
				
				<input class='input_check event_options' type='checkbox' id='set_enddate' name='set_enddate'" . (($data['dates']['enddate']) ? (" checked='checked'") : ("")) . " value='1' /> 
				<label for='set_enddate'>{$this->lang->words['form_set_enddate']}</label>
				
				<input class='input_check event_options' type='checkbox' id='set_recurfields' name='set_recurfields'" . (($data['event']['event_recurring']) ? (" checked='checked'") : ("")) . " value='1' /> 
				<label for='set_recurfields'>{$this->lang->words['form_event_repeats']}</label>
			</li>
		</ul>
		<h3 class='bar'>{$this->lang->words['event_options']}</h3>
		<ul>
			<li class='field'>
				<label for='event_calendar_id'>{$this->lang->words['form_whichcal']}</label>
				<select name='event_calendar_id' id='event_calendar_id'>{$data['jump']}</select>
			</li>
			" . (($data['_can_set_rsvp']) ? ("<li class='field checkbox type_setting'>
					<input type='checkbox' id='event_rsvp' name='event_rsvp' value='1' class='input_check'" . (($data['event']['event_rsvp']) ? (" checked='checked'") : ("")) . " />
					<label for='event_rsvp'>{$this->lang->words['request_rsvp']}</label>
				</li>") : ("")) . "
			<li class='field'>
				<label for='e_type'>{$this->lang->words['calendar_event_type']}</label>
				<select name=\"e_type\" id='e_type'>
					<option value=\"public\"" . ((!$data['event']['event_private']) ? (" selected='selected'") : ("")) . ">{$this->lang->words['calendar_type_public']}</option>
					<option value=\"private\"" . (($data['event']['event_private']) ? (" selected='selected'") : ("")) . ">{$this->lang->words['calendar_type_private']}</option>
				</select>
			</li>
			" . (($this->memberData['g_access_cp']) ? ("<li class='field type_setting'>
					<label for='e_groups'>{$this->lang->words['calendar_group_filter']}</label>
					<select name=\"e_groups[]\" id='e_groups' size=\"5\" multiple='multiple'>{$data['_groupSelect']}</select>
				</li>
				<li class='field checkbox type_setting'>
					<input type='checkbox' id='all_groups' value='1' class='input_check'" . (($data['event']['event_perms'] == '*') ? (" checked='checked'") : ("")) . " />
					<label for='all_groups'>{$this->lang->words['all_groups']}</label>
				</li>") : ("")) . "
		</ul>
		<h3 class='bar'>{$this->lang->words['event']}</h3>
		<ul>
			<li>{$data['editor']}</li>
			<li class='field checkbox'>
				<input type=\"checkbox\" name=\"enableemo\" class=\"input_check\" value=\"1\" " . (($data['event']['event_smilies']) ? ("checked='checked'") : ("")) . " />
				<label for='enableemo'>{$this->lang->words['enable_emo']}</label>
			</li>
		</ul>
	</fieldset>
	" . (($data['uploadForm']) ? ("
	<fieldset class='attachments'>
		{$data['uploadForm']}
	</fieldset>
	") : ("")) . "
	<fieldset class='submit'>
		<input class='input_submit' type=\"submit\" value=\"{$data['button']}\" tabindex=\"4\" /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_calendar" ) . "' title='{$this->lang->words['cancel']}' class='cancel'>{$this->lang->words['cancel']}</a>
	</fieldset>
</form>
</div>";
return $IPBHTML;
}

/* -- calendarEventsList --*/
function calendarEventsList($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarEventsList'] ) )
{
$count_d4335c102f968025c20f28a4c0559957 = is_array($this->functionData['calendarEventsList']) ? count($this->functionData['calendarEventsList']) : 0;
$this->functionData['calendarEventsList'][$count_d4335c102f968025c20f28a4c0559957]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<h2>{$this->lang->words['calendars']}</h2>
<div id='current_calendar' class='right calendar_wrap'>
	<div class='topic_controls'>
		<ul class='pagination'>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['prev_day'][0]}&amp;m={$data['prev_day'][1]}&amp;d={$data['prev_day'][2]}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "\" title=\"{$prev['month_name']} {$prev['year_id']}\">{$this->lang->words['_larr']} {$this->lang->words['day_previous']}</a></li>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showday&amp;y={$data['next_day'][0]}&amp;m={$data['next_day'][1]}&amp;d={$data['next_day'][2]}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_day" ) . "\" title=\"{$next['month_name']} {$next['year_id']}\">{$this->lang->words['day_next']} {$this->lang->words['_rarr']}</a></li>
		</ul>
		<ul class='topic_buttons'>
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;cal_id={$data['calendar']['cal_id']}&amp;do=newevent", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "' title='{$this->lang->words['event_add_single']}'>" . $this->registry->getClass('output')->getReplacement("cal_event") . " {$this->lang->words['event_add_single']}</a></li>
		</ul>
	</div>
	<br />
	<h2 class='maintitle'>{$this->lang->words['events_for_day']} {$data['start_date']}</h2>
	<ol id='week_view' class='clear vcalendar'>
		" . (($data['events'] OR $data['birthdays']) ? ("
			{$data['events']}
			<br /><br />
			{$data['birthdays']}
		") : ("
			<div class='post_block no_sidebar'>
				<div class='post_wrap'>
					<div class='post_body'>
						<div class='post entry-content'>
							" . sprintf( $this->lang->words['no_events_for_today'], $data['start_date'] ) . "
						</div>
					</div>
				</div>
			</div>
		")) . "
	</ol>
</div>
<div id='mini_calendars' class='left calendar_wrap'>
	<div id='calendar_list' class='left general_box'>
		" . ((is_array( $data['calendars'] ) && count( $data['calendars'] )) ? ("
		<p><strong>{$this->lang->words['select_calendar']}</strong></p>
		<ol>
			".$this->__f__55772f64789e1f9a2be86177a4eb72dd($data)."		</ol>
		") : ("")) . "
		<strong>{$this->lang->words['jump_to']}</strong><br />
		<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_calendar" ) . "\" method=\"post\">
			<fieldset>
				<label for='m' class='hide'>{$this->lang->words['fv_months']}:</label>
				<select name=\"m\" class='input_select'>{$data['month_box']}</select>&nbsp;
				<label for='year' class='hide'>{$this->lang->words['fv_years']}:</label>
				<select name=\"year\" class='input_select'>{$data['year_box']}</select>&nbsp;
				<input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
			</fieldset>
		</form>
	</div>
	<br style='clear:both;' />
	{$data['prev_minical']}
	<br />
	{$data['cur_minical']}
	<br />
	{$data['next_minical']}
</div>";
return $IPBHTML;
}


function __f__55772f64789e1f9a2be86177a4eb72dd($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['calendars'] as $cid => $cal )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<li>
					<div class='right'>
						<a class='calendar_icon' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$cid}", "public",'' ), "", "" ) . "' title=\"{$this->lang->words['download_this_calendar']}\"><img src='{$this->settings['img_url']}/download.png' alt=\"{$this->lang->words['download_this_calendar']}\" title=\"{$this->lang->words['download_this_calendar']}\" /></a>
						<a class='calendar_icon' href='" . str_replace( array( 'https://', 'http://' ), 'webcal://', $this->settings['base_url'] ) . "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$cid}' title=\"{$this->lang->words['subscribe_this_calendar']}\"><img src='{$this->settings['img_url']}/transmit.png' alt=\"{$this->lang->words['subscribe_this_calendar']}\" title=\"{$this->lang->words['subscribe_this_calendar']}\" /></a>
					</div>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$cid}&amp;do=showday&amp;y={$this->request['y']}&amp;m={$this->request['m']}&amp;d={$this->request['d']}", "public",'' ), "{$cal['cal_title_seo']}", "cal_day" ) . "' title=\"{$this->lang->words['view_this_calendar']}\" class='rounded'>{$cal['cal_title']}</a>
				</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarJump --*/
function calendarJump($calendars, $calendar, $chosen_date=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarJump'] ) )
{
$count_78be8d694ce72ba20eef96f24affa4c2 = is_array($this->functionData['calendarJump']) ? count($this->functionData['calendarJump']) : 0;
$this->functionData['calendarJump'][$count_78be8d694ce72ba20eef96f24affa4c2]['calendars'] = $calendars;
$this->functionData['calendarJump'][$count_78be8d694ce72ba20eef96f24affa4c2]['calendar'] = $calendar;
$this->functionData['calendarJump'][$count_78be8d694ce72ba20eef96f24affa4c2]['chosen_date'] = $chosen_date;
}
$IPBHTML .= "" . ((is_array( $calendars ) && count( $calendars ) > 1) ? ("
	<span class='desc calendar_jump clearfix'>{$this->lang->words['cal_in']} <a href='#calendar_chooser_menucontent' title='{$this->lang->words['switch_calendar']}' class='calendar_dropdown ipsButton_secondary' id='calendar_chooser'><strong>{$calendar['cal_title']}</strong> <img src='{$this->settings['img_url']}/dropdown.png' /></a></span>
	<ul class='ipbmenu_content' style='display: none' id='calendar_chooser_menucontent'>
		".$this->__f__42ed8518f0a2579d28cad5a16e8a354f($calendars,$calendar,$chosen_date)."	</ul>
	<script type='text/javascript'>
		new ipb.Menu( $('calendar_chooser'), $('calendar_chooser_menucontent') );
	</script>
") : ("
	<span class='desc calendar_jump blend_links'>{$this->lang->words['cal_in']} <strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$calendar['cal_id']}&amp;m={$chosen_date['month']}&amp;y={$chosen_date['year']}", "public",'' ), "{$calendar['cal_title_seo']}", "cal_month" ) . "' title=\"{$this->lang->words['view_this_calendar']}\" class='rounded'>{$calendar['cal_title']}</a></strong></span>
")) . "";
return $IPBHTML;
}


function __f__42ed8518f0a2579d28cad5a16e8a354f($calendars, $calendar, $chosen_date=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $calendars as $cid => $cal )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='clearfix'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$cid}&amp;m={$chosen_date['month']}&amp;y={$chosen_date['year']}", "public",'' ), "{$cal['cal_title_seo']}", "cal_month" ) . "' title=\"{$this->lang->words['view_this_calendar']}\">{$cal['cal_title']}</a>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarMainContent --*/
function calendarMainContent($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarMainContent'] ) )
{
$count_160fe2a647090dec37280522dd9c7bbb = is_array($this->functionData['calendarMainContent']) ? count($this->functionData['calendarMainContent']) : 0;
$this->functionData['calendarMainContent'][$count_160fe2a647090dec37280522dd9c7bbb]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<h2>{$this->lang->words['calendars']}</h2>
<div id='current_calendar' class='right calendar_wrap'>
	<div class='topic_controls'>
		<ul class='pagination'>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['prev_month']['month_id']}&amp;y={$data['prev_month']['year_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "\" title=\"{$data['prev_month']['month_name']} {$data['prev_month']['year_id']}\">{$this->lang->words['_larr']} {$this->lang->words['month_previous']}</a></li>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['next_month']['month_id']}&amp;y={$data['next_month']['year_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "\" title=\"{$data['next_month']['month_name']} {$data['next_month']['year_id']}\">{$this->lang->words['month_next']} {$this->lang->words['_rarr']}</a></li>
		</ul>
		<ul class='topic_buttons'>
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;cal_id={$data['calendar']['cal_id']}&amp;do=newevent", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "' title='{$this->lang->words['event_add_single']}'>" . $this->registry->getClass('output')->getReplacement("cal_event") . " {$this->lang->words['event_add_single']}</a></li>
		</ul>
	</div>
	<br />
	
	<table id='calendar_table' class='ipb_table vcalendar' summary=\"{$this->lang->words['calendar_for']} {$data['month_title']} {$data['chosen_date']['year']}\">
		<caption class='maintitle'>{$data['month_title']} {$data['chosen_date']['year']}</caption>
		<tr class='header'>
			<th class='head_week' scope='col'>&nbsp;</th>
			".$this->__f__11f4ed971d1cfeaec322119e68b90615($data)."			{$data['events']}
		</tr>
	</table>
	
	<div>
		<div class='right'>
			{$data['_like_strip']}
		</div>
		
		<ul class='pagination'>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;m={$data['navigation']['this_month']['m']}&amp;y={$data['navigation']['this_month']['y']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "\">{$this->lang->words['aa_cur_month']}</a></li>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['navigation']['this_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\">{$this->lang->words['aa_view_week']}</a></li>
		</ul>
	</div>
</div>
<div id='mini_calendars' class='left calendar_wrap'>
	<div id='calendar_list' class='general_box'>
		" . ((is_array( $data['calendars'] ) && count( $data['calendars'] )) ? ("
		<p><strong>{$this->lang->words['select_calendar']}</strong></p>
		<ol>
			".$this->__f__fe2aa36d85225df78b9b86494e78128f($data)."		</ol>
		") : ("")) . "
		<strong>{$this->lang->words['jump_to']}</strong><br />
		<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_calendar" ) . "\" method=\"post\">
			<fieldset>
				<label for='m' class='hide'>{$this->lang->words['fv_months']}:</label>
				<select name=\"m\" class='input_select'>{$data['month_box']}</select>&nbsp;
				<label for='year' class='hide'>{$this->lang->words['fv_years']}:</label>
				<select name=\"year\" class='input_select'>{$data['year_box']}</select>&nbsp;
				<input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
			</fieldset>
		</form>
	</div>
	{$data['minical_prev']}
	<br />
	{$data['minical_next']}
</div>
<br />";
return $IPBHTML;
}


function __f__11f4ed971d1cfeaec322119e68b90615($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['day_words'] as $day )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<th scope='col'>{$day}</th>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__fe2aa36d85225df78b9b86494e78128f($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['calendars'] as $cid => $cal )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<li>
					<div class='right'>
						<a class='calendar_icon' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$cid}", "public",'' ), "", "" ) . "' title=\"{$this->lang->words['download_this_calendar']}\"><img src='{$this->settings['img_url']}/download.png' alt=\"{$this->lang->words['download_this_calendar']}\" title=\"{$this->lang->words['download_this_calendar']}\" /></a>
						<a class='calendar_icon' href='" . str_replace( array( 'https://', 'http://' ), 'webcal://', $this->settings['base_url'] ) . "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$cid}' title=\"{$this->lang->words['subscribe_this_calendar']}\"><img src='{$this->settings['img_url']}/transmit.png' alt=\"{$this->lang->words['subscribe_this_calendar']}\" title=\"{$this->lang->words['subscribe_this_calendar']}\" /></a>
					</div>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$cid}&amp;m={$data['chosen_date']['month']}&amp;y={$data['chosen_date']['year']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_month" ) . "' title=\"{$this->lang->words['view_this_calendar']}\" class='rounded'>{$cal['cal_title']}</a>
				</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calendarShowEvent --*/
function calendarShowEvent($events, $comments) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
{$events}
<div id='event_comments' class='block_inner'>
	<div class='block pad'>
		<h2>{$comments['count']} {$this->lang->words['comment_block']}</h2>
		<div class='event_comment_wrap'>
			{$comments['html']}
		</div>
	</div>
</div>";
return $IPBHTML;
}

/* -- calendarWeekView --*/
function calendarWeekView($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calendarWeekView'] ) )
{
$count_cadea1641b01d0e39e38bd6ce8ba3549 = is_array($this->functionData['calendarWeekView']) ? count($this->functionData['calendarWeekView']) : 0;
$this->functionData['calendarWeekView'][$count_cadea1641b01d0e39e38bd6ce8ba3549]['data'] = $data;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<h2>{$this->lang->words['calendars']}</h2>
<div id='current_calendar' class='right calendar_wrap'>
	<div class='topic_controls'>
		<ul class='pagination'>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['prev_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['week_previous']}\">{$this->lang->words['_larr']} {$this->lang->words['week_previous']}</a></li>
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}&amp;do=showweek&amp;week={$data['next_week']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_week" ) . "\" title=\"{$this->lang->words['week_next']}\">{$this->lang->words['week_next']} {$this->lang->words['_rarr']}</a></li>
		</ul>
		<ul class='topic_buttons'>
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;cal_id={$data['calendar']['cal_id']}&amp;do=newevent", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_post" ) . "' title='{$this->lang->words['event_add_single']}'>" . $this->registry->getClass('output')->getReplacement("cal_event") . " {$this->lang->words['event_add_single']}</a></li>
		</ul>
	</div>
	<br />
	<h2 class='maintitle'>{$this->lang->words['week_beginning']} {$data['start_date']}</h2>
	<ol id='week_view' class='clear vcalendar'>
		{$data['events']}
	</ol>
</div>
<div id='mini_calendars' class='left calendar_wrap'>
	<div id='calendar_list' class='left general_box'>
		" . ((is_array( $data['calendars'] ) && count( $data['calendars'] )) ? ("
		<p><strong>{$this->lang->words['select_calendar']}</strong></p>
		<ol>
			".$this->__f__8f68e110a999aaf31e47ef6eebae8b9b($data)."		</ol>
		") : ("")) . "
		<strong>{$this->lang->words['jump_to']}</strong><br />
		<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$data['calendar']['cal_id']}", "public",'' ), "{$data['calendar']['cal_title_seo']}", "cal_calendar" ) . "\" method=\"post\">
			<fieldset>
				<label for='m' class='hide'>{$this->lang->words['fv_months']}:</label>
				<select name=\"m\" class='input_select'>{$data['month_box']}</select>&nbsp;
				<label for='year' class='hide'>{$this->lang->words['fv_years']}:</label>
				<select name=\"year\" class='input_select'>{$data['year_box']}</select>&nbsp;
				<input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
			</fieldset>
		</form>
	</div>
	<br style='clear:both;' />
	{$data['prev_minical']}
	<br />
	{$data['cur_minical']}
	<br />
	{$data['next_minical']}
</div>";
return $IPBHTML;
}


function __f__8f68e110a999aaf31e47ef6eebae8b9b($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['calendars'] as $cid => $cal )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<li>
					<div class='right'>
						<a class='calendar_icon' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$cid}", "public",'' ), "", "" ) . "' title=\"{$this->lang->words['download_this_calendar']}\"><img src='{$this->settings['img_url']}/download.png' alt=\"{$this->lang->words['download_this_calendar']}\" title=\"{$this->lang->words['download_this_calendar']}\" /></a>
						<a class='calendar_icon' href='" . str_replace( array( 'https://', 'http://' ), 'webcal://', $this->settings['base_url'] ) . "app=calendar&amp;module=feed&amp;section=output&amp;cal_id={$cid}' title=\"{$this->lang->words['subscribe_this_calendar']}\"><img src='{$this->settings['img_url']}/transmit.png' alt=\"{$this->lang->words['subscribe_this_calendar']}\" title=\"{$this->lang->words['subscribe_this_calendar']}\" /></a>
					</div>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$cal['cal_id']}&amp;do=showweek&amp;week={$this->request['week']}", "public",'' ), "{$cal['cal_title_seo']}", "cal_week" ) . "' title=\"{$this->lang->words['view_this_calendar']}\" class='rounded'>{$cal['cal_title']}</a>
				</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calEventFollowedWrapper --*/
function calEventFollowedWrapper($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calEventFollowedWrapper'] ) )
{
$count_d9a96a7ea69d7cc58d6a6e339c4267a3 = is_array($this->functionData['calEventFollowedWrapper']) ? count($this->functionData['calEventFollowedWrapper']) : 0;
$this->functionData['calEventFollowedWrapper'][$count_d9a96a7ea69d7cc58d6a6e339c4267a3]['rows'] = $rows;
}
$IPBHTML .= "<div id='search_results'>
	<ol>
		".$this->__f__a8e3258b5612c1609406687bde2859fd($rows)."	</ol>
</div>";
return $IPBHTML;
}


function __f__a8e3258b5612c1609406687bde2859fd($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class=\"row1 clearfix clear\">{$row['html']}</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- calEventSearchResult --*/
function calEventSearchResult($r, $resultAsTitle=false, $type, $ends) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['calEventSearchResult'] ) )
{
$count_7ea0ec0f20b217dd05631ea5fe7875e8 = is_array($this->functionData['calEventSearchResult']) ? count($this->functionData['calEventSearchResult']) : 0;
$this->functionData['calEventSearchResult'][$count_7ea0ec0f20b217dd05631ea5fe7875e8]['r'] = $r;
$this->functionData['calEventSearchResult'][$count_7ea0ec0f20b217dd05631ea5fe7875e8]['resultAsTitle'] = $resultAsTitle;
$this->functionData['calEventSearchResult'][$count_7ea0ec0f20b217dd05631ea5fe7875e8]['type'] = $type;
$this->functionData['calEventSearchResult'][$count_7ea0ec0f20b217dd05631ea5fe7875e8]['ends'] = $ends;
}
$IPBHTML .= "<div class='result_info'>
	<h3><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$r['type_id_2']}&amp;hl={$this->request['search_higlight']}", "public",'' ), "{$r['event_title_seo']}", "cal_event" ) . "'>{$r['content_title']}</a></h3>
	" . ((!$resultAsTitle) ? ("
	<p>
		{$r['content']}
	</p>
	") : ("")) . "
	" . ((count($r['_followData'])) ? ("
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('search'), 'followData' ) ? $this->registry->getClass('output')->getTemplate('search')->followData($r['_followData']) : '' ) . "
	") : ("")) . "
</div>
<div class='result_details desc'>
	<input class='input_check checkall toggle_notify_on right' type=\"checkbox\" name=\"likes[]\" value=\"{$r['_followData']['like_app']}-{$r['_followData']['like_area']}-{$r['_followData']['like_rel_id']}\" />
	<ul>
		<li>{$this->lang->words['search_by']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "</li>
		<li>{$this->lang->words['event_date']}  {$r['_start_date']} 
			" . ((!$ends AND $r['_event_time']) ? ("{$r['_event_time']}") : ("")) . " 
			" . (($ends) ? ("{$ends}") : ("")) . " 
			" . (($ends AND $r['_event_time']) ? ("{$r['_event_time']} " . (($r['_event_etime']) ? ("- {$r['_event_etime']}") : ("")) . "") : ("")) . "
			" . (($r['_event_etime'] AND !$ends) ? ("- {$r['_event_etime']}") : ("")) . " ({$type})</li>
	</ul>
</div>";
return $IPBHTML;
}

/* -- event_likeSummary --*/
function event_likeSummary($data, $relId, $opts) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<div class='__like right' data-app=\"{$data['app']}\" data-area=\"{$data['area']}\" data-relid=\"{$relId}\" data-isfave=\"{$data['iLike']}\">
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'event_likeSummaryContents' ) ? $this->registry->getClass('output')->getTemplate('calendar')->event_likeSummaryContents($data, $relId, $opts) : '' ) . "
</div>
<script type=\"text/javascript\">
	var FAVE_TEMPLATE = new Template( \"<h3>" . sprintf( $this->lang->words['unset_fave_title'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "</h3><div class='ipsPad'><span class='desc'>" . sprintf( $this->lang->words['unset_fave_words'], $this->lang->words['like_un' . $data['vernacular'] ]) . "</span><br /><p class='ipsForm_center'><input type='button' value='" . sprintf( $this->lang->words['unset_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "' class='input_submit _funset' /></p></div>\");
</script>";
return $IPBHTML;
}

/* -- event_likeSummaryContents --*/
function event_likeSummaryContents($data, $relId, $opts=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['event_likeSummaryContents'] ) )
{
$count_4d9a669b203ad736f4c9b556249bb824 = is_array($this->functionData['event_likeSummaryContents']) ? count($this->functionData['event_likeSummaryContents']) : 0;
$this->functionData['event_likeSummaryContents'][$count_4d9a669b203ad736f4c9b556249bb824]['data'] = $data;
$this->functionData['event_likeSummaryContents'][$count_4d9a669b203ad736f4c9b556249bb824]['relId'] = $relId;
$this->functionData['event_likeSummaryContents'][$count_4d9a669b203ad736f4c9b556249bb824]['opts'] = $opts;
}
$IPBHTML .= "<span class='ipsButton_extra right " . (($data['totalCount']) ? ("_fmore clickable") : ("")) . "' title='" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "' data-tooltip=\"" . sprintf( $this->lang->words['like_totalcount_' . $data['vernacular'] ], $data['totalCount'] ) . "\"><img src='{$this->settings['img_url']}/icon_users.png' /> <strong>{$data['totalCount']}</strong></span>
" . (($this->memberData['member_id']) ? ("<a href='#' title=\"" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['fave_tt_on'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['fave_tt_off'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "\" class='ftoggle ipsButton_secondary'>" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['unset_fave_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['set_fave_button'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "</a>") : ("")) . "";
return $IPBHTML;
}

/* -- eventAttendee --*/
function eventAttendee($member, $event) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['eventAttendee'] ) )
{
$count_cebe52a4ec88401da9f0905a7908bf72 = is_array($this->functionData['eventAttendee']) ? count($this->functionData['eventAttendee']) : 0;
$this->functionData['eventAttendee'][$count_cebe52a4ec88401da9f0905a7908bf72]['member'] = $member;
$this->functionData['eventAttendee'][$count_cebe52a4ec88401da9f0905a7908bf72]['event'] = $event;
}
$IPBHTML .= "<li id='attendee-{$member['member_id']}' class='" .  IPSLib::next( $this->registry->templateStriping["attendeeStripe"] ) . "'>
	<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'><img src='{$member['pp_small_photo']}' width='{$member['pp_small_width']}' height='{$member['pp_small_height']}' class='photo' /></a>
	<div>
		" . (($this->memberData['g_is_supmod'] OR $event['_can_delete_rsvp']) ? ("
			<div class='desc'>
				<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarRSVPRemove&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}&amp;attendee_id={$member['rsvp_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['rsvp_delete_link']}'><img src='{$this->settings['img_url']}/delete.png' alt='{$this->lang->words['rsvp_delete_link']}' title='{$this->lang->words['rsvp_delete_link']}' /></a>
			</div>
		") : ("")) . "
		<strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</strong>
		<p class='desc lighter'>
			{$this->lang->words['rsvp_date_pre']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['rsvp_date'],"short", 0)) . "
		</p>
	</div>
</li>";
return $IPBHTML;
}

/* -- eventsWrapper --*/
function eventsWrapper($events) {
$IPBHTML = "";
$IPBHTML .= "<ul>{$events}</ul>";
return $IPBHTML;
}

/* -- followedContentCalendars --*/
function followedContentCalendars($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['followedContentCalendars'] ) )
{
$count_e06f62d9ba507c578e70028f56f222e6 = is_array($this->functionData['followedContentCalendars']) ? count($this->functionData['followedContentCalendars']) : 0;
$this->functionData['followedContentCalendars'][$count_e06f62d9ba507c578e70028f56f222e6]['rows'] = $rows;
}
$IPBHTML .= "<div id='search_results'>
	<ol>
		".$this->__f__4655160cb585f2185c60cb4523f90513($rows)."	</ol>
</div>";
return $IPBHTML;
}


function __f__4655160cb585f2185c60cb4523f90513($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class=\"row1 clearfix clear\">
				<div class='result_info'>
					<h3><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;cal_id={$r['cal_id']}", "public",'' ), "{$r['cal_title_seo']}", "cal_calendar" ) . "'>{$r['cal_title']}</a></h3>
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('search'), 'followData' ) ? $this->registry->getClass('output')->getTemplate('search')->followData($r['_followData']) : '' ) . "
				</div>
				<div class='right'>
					<input class='input_check checkall toggle_notify_on' type=\"checkbox\" name=\"likes[]\" value=\"{$r['_followData']['like_app']}-{$r['_followData']['like_area']}-{$r['_followData']['like_rel_id']}\" />
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- mini_cal_blank_cell --*/
function mini_cal_blank_cell() {
$IPBHTML = "";
$IPBHTML .= "<td class='blank'><!-- no content --></td>";
return $IPBHTML;
}

/* -- mini_cal_date_cell --*/
function mini_cal_date_cell($day=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['mini_cal_date_cell'] ) )
{
$count_f6eafe1933e61c8646da0efe9d842875 = is_array($this->functionData['mini_cal_date_cell']) ? count($this->functionData['mini_cal_date_cell']) : 0;
$this->functionData['mini_cal_date_cell'][$count_f6eafe1933e61c8646da0efe9d842875]['day'] = $day;
}
$IPBHTML .= "<td>
	" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "
</td>";
return $IPBHTML;
}

/* -- mini_cal_date_cell_today --*/
function mini_cal_date_cell_today($day=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['mini_cal_date_cell_today'] ) )
{
$count_a0ae27d34f654c68a8be025ff3aa11b9 = is_array($this->functionData['mini_cal_date_cell_today']) ? count($this->functionData['mini_cal_date_cell_today']) : 0;
$this->functionData['mini_cal_date_cell_today'][$count_a0ae27d34f654c68a8be025ff3aa11b9]['day'] = $day;
}
$IPBHTML .= "<td class=\"today\">
	<strong>" . (($day['url']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$day['url']}", "public",'' ), "{$day['seotitle']}", "{$day['template']}" ) . "'>{$day['day']}</a>") : ("{$day['day']}")) . "</strong>
</td>";
return $IPBHTML;
}

/* -- mini_cal_new_row --*/
function mini_cal_new_row($week="", $calendar) {
$IPBHTML = "";
$IPBHTML .= "</tr>
<tr>";
return $IPBHTML;
}

/* -- miniCalendarWrapper --*/
function miniCalendarWrapper($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['miniCalendarWrapper'] ) )
{
$count_518a292caa5bb94824b6dea9939d0e4d = is_array($this->functionData['miniCalendarWrapper']) ? count($this->functionData['miniCalendarWrapper']) : 0;
$this->functionData['miniCalendarWrapper'][$count_518a292caa5bb94824b6dea9939d0e4d]['data'] = $data;
}

$this->mini_cal = 'row2';
$IPBHTML .= "<div class='mini-cal-wrap'>
	<h3 class='maintitle'>{$data['month_title']} {$data['year']}</h3>
	<table class='mini_cal vcalendar'>
		<tr class='header'>
			<th class='head_week'>&nbsp;</th>
			".$this->__f__e857490448664d519539c02dd2cff76b($data)."	
			{$data['events']}
		</tr>
	</table>
</div>";
return $IPBHTML;
}


function __f__e857490448664d519539c02dd2cff76b($data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['day_words'] as $day )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<th>" . IPSText::mbsubstr( $day, 0, 1 ) . "</th>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- modEventsWrapper --*/
function modEventsWrapper($events, $pages) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['modEventsWrapper'] ) )
{
$count_0273ef76d946433a14f51e64ad3cf76b = is_array($this->functionData['modEventsWrapper']) ? count($this->functionData['modEventsWrapper']) : 0;
$this->functionData['modEventsWrapper'][$count_0273ef76d946433a14f51e64ad3cf76b]['events'] = $events;
$this->functionData['modEventsWrapper'][$count_0273ef76d946433a14f51e64ad3cf76b]['pages'] = $pages;
}
$IPBHTML .= "<div>{$pages}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	" . ((count($events)) ? ("
		".$this->__f__02584c662d1562128bc6665542fd9e66($events,$pages)."	") : ("
		<div class='no_messages clear'>
			{$this->lang->words['no_events_pend_app']}
		</div>
	")) . "
	<div>{$pages}</div>
</div>";
return $IPBHTML;
}


function __f__02584c662d1562128bc6665542fd9e66($events, $pages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $events as $event )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'showEventSimple' ) ? $this->registry->getClass('output')->getTemplate('calendar')->showEventSimple($event['event']) : '' ) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showEvent --*/
function showEvent($event, $member, $typeInfo, $like='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['showEvent'] ) )
{
$count_c5b86b4dd734359c94eac107ff8951cb = is_array($this->functionData['showEvent']) ? count($this->functionData['showEvent']) : 0;
$this->functionData['showEvent'][$count_c5b86b4dd734359c94eac107ff8951cb]['event'] = $event;
$this->functionData['showEvent'][$count_c5b86b4dd734359c94eac107ff8951cb]['member'] = $member;
$this->functionData['showEvent'][$count_c5b86b4dd734359c94eac107ff8951cb]['typeInfo'] = $typeInfo;
$this->functionData['showEvent'][$count_c5b86b4dd734359c94eac107ff8951cb]['like'] = $like;
}

if ( ! isset( $this->registry->templateStriping['attendeeStripe'] ) ) {
$this->registry->templateStriping['attendeeStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . ((!$this->settings['disable_lightbox']) ? ("
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "
" . $this->registry->getClass('output')->addJSModule("rating", "0" ) . "
" . $this->registry->getClass('output')->addJSModule("calendar", "0" ) . "
<div class='post_block vcalendar " . (($event['event_approved']==0) ? ("moderated") : ("")) . "' id='event_id_{$event['event_id']}'>
	<div class='post_wrap vevent'>
		<h2 class='maintitle'>
			<span class='main_topic_title summary'>{$this->lang->words['event_prefix']} {$event['event_title']}</span>
			" . (($event['_can_rate']) ? ("<span class='rating'>{$this->lang->words['event_rate_me']}
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=1&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_1' title='{$this->lang->words['top_js_1star']}'>" . (($event['event_rating_avg'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "</a>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=2&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_2' title='{$this->lang->words['top_js_2star']}'>" . (($event['event_rating_avg'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "</a>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=3&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_3' title='{$this->lang->words['top_js_3star']}'>" . (($event['event_rating_avg'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "</a>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=4&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_4' title='{$this->lang->words['top_js_4star']}'>" . (($event['event_rating_avg'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "</a>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=rating&amp;event_id={$event['event_id']}&amp;rating=5&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' id='event_rate_5' title='{$this->lang->words['top_js_5star']}'>" . (($event['event_rating_avg'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "</a>
					<span id='rating_text'>
						" . (($event['event_rating_hits'] > 0) ? ("<span id='rating_hits'>{$event['event_rating_hits']}</span> {$this->lang->words['event_rates']}") : ("")) . "
						" . (($event['_rating_value'] != -1) ? (" ({$this->lang->words['event_your_rate']} <span id='your_rate'>{$event['_rating_value']}</span>)") : ("")) . "
					</span>
					<script type='text/javascript'>
					//<![CDATA[
						rating = new ipb.rating( 'event_rate_', { 
											url: '" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&module=ajax&section=rating&event_id={$event['event_id']}", "public",'' ), "", "" ) . "&md5check=' + ipb.vars['secure_hash'],
											cur_rating: {$event['event_rating_avg']},
											rated: " . (($event['_rating_value'] != -1) ? ("1") : ("0")) . ",
											allow_rate: {$event['_can_rate']},
											multi_rate: 1,
											show_rate_text: true
										  } );
					//]]>
					</script>
				</span>") : ("<span class='rating'>
					" . (($event['event_rating_avg'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					" . (($event['event_rating_avg'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					" . (($event['event_rating_avg'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					" . (($event['event_rating_avg'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					" . (($event['event_rating_avg'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					<span id='rating_text'>
						" . (($event['event_rating_hits'] > 0) ? ("<span id='rating_hits'>{$event['event_rating_hits']}</span> {$this->lang->words['event_rates']}") : ("")) . "
					</span>
				</span>")) . "
		</h2>
		" . (($member['member_id']) ? ("
			<h3>
		") : ("
			<h3 class='guest'>
		")) . "
		<span class='post_id'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' rel='bookmark url' title='{$this->lang->words['link_to_event']} {$event['event_title']}'>{$this->lang->words['permalink_link']}</a></span>
			" . (($member['member_id']) ? ("
				<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</span>
			") : ("
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "
			")) . "
		</h3>
		<div class='author_info'>
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userInfoPane' ) ? $this->registry->getClass('output')->getTemplate('global')->userInfoPane($member, $event['event_id'], array()) : '' ) . "
		</div>
		<div class='post_body'>
			" . (($event['event_rsvp']) ? ("<div class='event-rsvp'>
					<h4>{$this->lang->words['rsvp_title_header']}</h4>
					<p class='rsvp-info'>{$this->lang->words['event_poster_want_rsvp']}</p>
					
					<ul id='attendee-list'>
						" . ((count($event['_rsvp_attendees'])) ? ("
														".$this->__f__b3f00e9fbcbf2357416eb76718f2917a($event,$member,$typeInfo,$like)."						") : ("
							<li id='no-attendees'>{$this->lang->words['no_rsvp_yet']}</li>
						")) . "
					</ul>
					
					" . (($event['_can_rsvp'] OR !$event['_have_rsvp']) ? ("<div class='rsvp-button'>
							" . (($event['_can_rsvp']) ? ("
								<a id='rsvp-button' rel='event_id_{$event['event_id']}' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}&amp;_rsvp=1", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' title='{$this->lang->words['click_to_rsvp']}'>{$this->lang->words['rsvp_button']}</a>
							") : ("" . ((!$event['_have_rsvp']) ? ("
									<span>{$this->lang->words['noperm_rsvp']}</span>
								") : ("")) . "")) . "
						</div>") : ("")) . "
				</div>") : ("")) . "
			
			<p class='posted_info'>
				<strong class='event'>{$this->lang->words['event_date']}  <abbr class=\"dtstart\" title=\"" . date( 'c', $event['_start_time'] ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr> " . (($typeInfo['ends']) ? ("<abbr class=\"dtend\" title=\"" . date( 'c', $event['_end_time'] ) . "\">{$typeInfo['ends']} " . (($event['_event_etime']) ? ("{$event['_event_etime']}") : ("")) . "") : ("" . (($event['_event_etime']) ? ("- {$event['_event_etime']}") : ("")) . "</abbr>")) . " ({$typeInfo['type']})</strong>
			</p>
			<div class='post entry-content description'>
				{$event['event_content']}
				{$event['event_attach_content']}
			</div>
			<!-- Reputation: -->
			" . (($this->settings['reputation_enabled']) ? ("" . ((!( $this->settings['reputation_protected_groups'] && in_array( $member['member_group_id'], explode( ',', $this->settings['reputation_protected_groups'] ) ) )) ? ("<div class='rep_bar right' id='rep_post_{$event['event_id']}'>
				" . (($event['rep_points'] == 0) ? ("
					<span class='reputation zero rep_show' title='{$this->lang->words['reputation']}'>
				") : ("")) . "
				" . (($event['rep_points'] > 0) ? ("
					<span class='reputation positive rep_show' title='{$this->lang->words['reputation']}'>
				") : ("")) . "
				" . (($event['rep_points'] < 0) ? ("
					<span class='reputation negative rep_show' title='{$this->lang->words['reputation']}' >
				") : ("")) . "
						{$event['rep_points']}
					</span>
					" . (($event['has_given_rep'] != 1 AND $event['has_given_rep'] != -1 AND $this->memberData['member_id'] != 0 && ( $this->settings['reputation_can_self_vote'] OR $event['event_member_id'] != $this->memberData['member_id'] )) ? ("<ul>
						" . (($this->settings['reputation_point_types'] == 'positive' || $this->settings['reputation_point_types'] == 'both') ? ("
							<li><a href='{$this->settings['base_url']}app=core&amp;module=global&amp;section=reputation&amp;do=add_rating&amp;app_rate=calendar&amp;type=event_id&amp;type_id={$event['event_id']}&amp;rating=1&amp;secure_key={$this->member->form_hash}' class='rep_up' title='{$this->lang->words['reputation_up']}'>" . $this->registry->getClass('output')->getReplacement("rep_up") . "</a></li>
						") : ("")) . "
						" . (($this->settings['reputation_point_types'] == 'negative' || $this->settings['reputation_point_types'] == 'both') ? ("
							<li><a href='{$this->settings['base_url']}app=core&amp;module=global&amp;section=reputation&amp;do=add_rating&amp;app_rate=calendar&amp;type=event_id&amp;type_id={$event['event_id']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}' class='rep_down' title='{$this->lang->words['reputation_down']}'>" . $this->registry->getClass('output')->getReplacement("rep_down") . "</a></li>
						") : ("")) . "
						</ul>") : ("")) . "
				</div>") : ("")) . "
				<script type='text/javascript'>
					ipb.global.registerReputation( 'rep_post_{$event['event_id']}', { app: 'calendar', type: 'event_id', typeid: '{$event['event_id']}' }, parseInt('{$event['rep_points']}') );
				</script>") : ("")) . "
			<!-- / Reputation -->
		</div>
		<ul class='post_controls'>
			" . (($event['_canReport'] and $this->memberData['member_id']) ? ("
				<li class='report'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;rcom=calendar&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['report_event']}'>{$this->lang->words['report']}</a></li>
			") : ("")) . "
			" . (($this->memberData['g_is_supmod'] OR $this->memberData['member_id'] == $event['event_member_id']) ? ("
				<li class='post_del'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=delete&amp;md5check={$this->member->form_hash}&amp;event_id={$event['event_id']}&amp;cal_id={$event['event_calendar_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['calendar_delete_title']}'>{$this->lang->words['calendar_delete_button']}</a></li>
				<li class='post_edit'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=post&amp;do=edit&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['calendar_edit_title']}'>{$this->lang->words['calendar_edit_button']}</a></li>
			") : ("")) . "
			" . (($this->memberData['g_is_supmod']) ? ("" . (($event['event_approved']) ? ("
					<li class='post_unapprove'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarEventApprove&amp;modfilter={$this->request['modfilter']}&amp;approve=0&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['unapprove_event']}'>" . $this->registry->getClass('output')->getReplacement("edit_post_icon") . " {$this->lang->words['unapprove_event']}</a></li>
				") : ("
					<li class='post_approve'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=moderate&amp;do=calendarEventApprove&amp;modfilter={$this->request['modfilter']}&amp;approve=1&amp;md5check={$this->member->form_hash}&amp;cal_id={$event['event_calendar_id']}&amp;event_id={$event['event_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['approve_event']}'>" . $this->registry->getClass('output')->getReplacement("edit_post_icon") . " {$this->lang->words['approve_event']}</a></li>
				")) . "") : ("")) . "
		</ul>
	</div>			
</div>
<div>
	<div class='right'>{$event['_like_strip']}</div>
	" . (($this->settings['sl_enable']) ? ("
		<div class='left'>
			" . IPSLib::shareLinks( $event['event_title'] ) . "
		</div>
	") : ("")) . "
</div>
<br class='clear' /><br />";
return $IPBHTML;
}


function __f__b3f00e9fbcbf2357416eb76718f2917a($event, $member, $typeInfo, $like='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $event['_rsvp_attendees'] as $attendee )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								" . ( method_exists( $this->registry->getClass('output')->getTemplate('calendar'), 'eventAttendee' ) ? $this->registry->getClass('output')->getTemplate('calendar')->eventAttendee($attendee, $event) : '' ) . "
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showEventSimple --*/
function showEventSimple($event) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_calendar', $this->_funcHooks['showEventSimple'] ) )
{
$count_8d8e7dda105e787900f337fcf9284b8f = is_array($this->functionData['showEventSimple']) ? count($this->functionData['showEventSimple']) : 0;
$this->functionData['showEventSimple'][$count_8d8e7dda105e787900f337fcf9284b8f]['event'] = $event;
}
$IPBHTML .= "<div class='post_block no_sidebar " . (($event['event_approved']==0) ? ("moderated") : ("")) . "' id='event_id_{$event['event_id']}'>
	<div class='post_wrap vevent'>
		<h3>
			<span class='main_topic_title summary'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' title='{$this->lang->words['view_event_title']} {$event['event_title']}'>{$this->lang->words['event_prefix']} {$event['event_title']}</a></span>
			<span class='rating right'>
				" . (($event['event_rating_avg'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
				" . (($event['event_rating_avg'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
				" . (($event['event_rating_avg'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
				" . (($event['event_rating_avg'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
				" . (($event['event_rating_avg'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
			</span>
		</h3>
		<span class='post_id'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$event['event_id']}", "public",'' ), "{$event['event_title_seo']}", "cal_event" ) . "' class='hide' rel='bookmark url' title='{$this->lang->words['link_to_event']} {$event['event_title']}'>{$this->lang->words['permalink_link']}</a></span>

		<div class='post_body'>
			<p class='posted_info'>
				<strong class='event'>{$this->lang->words['event_date']}  <abbr class=\"dtstart\" title=\"" . date( 'c', $event['_start_time'] ) . "\">{$event['_start_date']} {$event['_event_time']}</abbr> " . (($event['ends']) ? ("<abbr class=\"dtend\" title=\"" . date( 'c', $event['_end_time'] ) . "\">{$event['ends']} " . (($event['_event_etime']) ? ("{$event['_event_etime']}") : ("")) . "") : ("" . (($event['_event_etime']) ? ("- {$event['_event_etime']}") : ("")) . "</abbr>")) . " ({$event['type']})</strong>
			</p>
			<div class='post entry-content description'>
				{$event['event_content']}
				{$event['event_attach_content']}
			</div>
		</div>
	</div>			
</div>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>