<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>Classifieds Random Ad</hook_name>
      <hook_desc>Displays a random advert in category sidebar.</hook_desc>
      <hook_author>Andrew Millne</hook_author>
      <hook_email>andy@millne.com</hook_email>
      <hook_website>http://www.millne.com/</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:3:{s:21:"required_applications";a:1:{s:11:"classifieds";a:3:{s:8:"app_name";s:11:"Classifieds";s:11:"min_version";i:10009;s:11:"max_version";i:0;}}s:20:"hook_php_version_min";s:0:"";s:20:"hook_php_version_max";s:0:"";}]]></hook_requirements>
      <hook_version_human>1.0.0</hook_version_human>
      <hook_version_long>10000</hook_version_long>
      <hook_extra_data/>
      <hook_key>cfds_random_ad</hook_key>
      <hook_global_caches/>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>cfdsRandomAd.php</hook_file_real>
      <hook_type>templateHooks</hook_type>
      <hook_classname>cfdsRandomAd</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:0:"";s:9:"skinGroup";s:16:"skin_classifieds";s:12:"skinFunction";s:13:"category_view";s:4:"type";s:2:"if";s:2:"id";s:11:"siblingtest";s:8:"position";s:10:"post.endif";}]]></hook_data>
      <hooks_source><![CDATA[<?php

class cfdsRandomAd
{

    public $registry;
	protected $settings;
	
	public function __construct()
	{
		$this->registry = ipsRegistry::instance();
                $this->settings   =& $this->registry->fetchSettings();
                

		if ( ! $this->registry->isClassLoaded('classifieds') )
		{
			/* Classifieds Object */
			require_once( IPS_ROOT_PATH . '/applications_addon/other/classifieds/sources/classes/classifieds.php' );
			$this->registry->setClass( 'classifieds', new classifieds( $this->registry ) );
		}

                require_once( IPSLib::getAppDir( 'classifieds' ) . '/sources/classes/classifieds/items.php' );
                $this->items = new classifieds_items( $this->registry );
                

	}
        
	public function getOutput()
	{
		                             
        $item =  $this->items->getRandom();
        
        if($item) {
			return $this->registry->output->getTemplate( 'classifieds_hooks' )->randomAd( $item );
		}
              
	}	
}]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help></hookextras_help>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
