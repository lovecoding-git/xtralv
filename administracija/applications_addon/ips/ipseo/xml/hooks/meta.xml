<?xml version="1.0" encoding="utf-8"?>
<hookexport>
  <hookdata>
    <config>
      <hook_name>IP.SEO: Meta Tags and Google Analytics</hook_name>
      <hook_desc>Adds meta tags to the head element of any page, provides support for adding Google Analytics code.</hook_desc>
      <hook_author>Invision Power Services, Inc.</hook_author>
      <hook_email>dcryer@invisionpower.com</hook_email>
      <hook_website>http://www.invisionpower.com/</hook_website>
      <hook_update_check/>
      <hook_requirements><![CDATA[a:4:{s:20:"hook_ipb_version_min";i:31000;s:20:"hook_ipb_version_max";i:0;s:20:"hook_php_version_min";s:1:"0";s:20:"hook_php_version_max";s:1:"0";}]]></hook_requirements>
      <hook_version_human>2.0</hook_version_human>
      <hook_version_long>20000</hook_version_long>
      <hook_extra_data><![CDATA[a:4:{s:7:"display";a:1:{s:8:"settings";s:31:"Settings: Google Analytics Code";}s:8:"database";a:0:{}s:13:"settingGroups";a:0:{}s:8:"settings";a:1:{s:0:"";s:8:"ipseo_ga";}}]]></hook_extra_data>
      <hook_key>ipseo_meta</hook_key>
    </config>
  </hookdata>
  <hookfiles>
    <file>
      <hook_file_real>ipSeoMeta.php</hook_file_real>
      <hook_type>skinHooks</hook_type>
      <hook_classname>ipSeoMeta</hook_classname>
      <hook_data><![CDATA[a:8:{s:12:"dataLocation";s:0:"";s:14:"libApplication";s:0:"";s:15:"classToOverload";s:11:"skin_global";s:9:"skinGroup";N;s:12:"skinFunction";N;s:4:"type";N;s:2:"id";N;s:8:"position";N;}]]></hook_data>
      <hooks_source><![CDATA[
		class ipSeoMeta extends skin_global(~id~)
		{
			function globalTemplate( $html, $documentHeadItems, $css, $jsModules, $metaTags, array $header_items, $items=array(), $footer_items=array(), $stats=array())
			{
			
				//-----------------------------------------
				// Add the tags
				//-----------------------------------------
			
				$meta = ips_CacheRegistry::instance()->getCache('ipseo_meta');
				$meta = @is_string($meta) ? unserialize($meta) : $meta;
				
				if(!is_array($meta))
				{
					$meta = array();
				}

				foreach($meta as $page => $tags)
				{
					if(!is_array($tags))
					{
						$tags = array();
					}
				
					$match = str_replace('/', '\/', $page);
					$match = str_replace('-', '\-', $match);
					$match = str_replace('_', '\_', $match);
					$match = str_replace('.', '\.', $match);
					$match = str_replace('*', '(.*)?', $match);
										
					$url  = !$_SERVER['HTTPS'] || $_SERVER['HTTPS'] == 'off' ? 'http://' : 'https://';
					$url .= $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
					
					$req  = str_replace($this->settings['board_url'], '', $url);
					
					$req = str_replace('/index.php?/', '/', $req);
					$req = str_replace('/index.php/', '/', $req);
					$req = str_replace('/index.php?', '', $req);
					$req = str_replace('/index.php', '', $req);
																														
					if(preg_match('/^' . $match . '$/', $req))
					{
						$add = array();

						foreach($tags as $tag => $val)
						{
							if($tag == 'title')
							{
								$replaceTitle = $val;
							}
							
							$add[$tag] = $val;
						}
						
						if(!empty($metaTags) && is_array($metaTags))
						{
							$metaTags = array_merge($metaTags, $add);
						}
						else
						{
							$metaTags = $add;
						}
					}
				}
				
				$rtn = parent::globalTemplate( $html, $documentHeadItems, $css, $jsModules, $metaTags, $header_items, $items, $footer_items, $stats);
				
				if($replaceTitle) 
				{
					$title        = str_replace(' - ' . $this->settings['board_name'], '', $header_items['title']);
					$replaceTitle = str_replace('{oldTitle}', $title, $replaceTitle);
					$rtn          = preg_replace('/<title>([^<]+?)</i', '<title>' . $replaceTitle . '<', $rtn);					
				}
				
				if(!empty($this->settings['ipseo_ga']))
				{
					$rtn = str_replace('</head>', $this->settings['ipseo_ga'] . '</head>', $rtn);
				}
				
				//-----------------------------------------
				// Are we live editing?
				//-----------------------------------------
								
				if ( $this->memberData['g_access_cp'] and $_SESSION['seo_meta_edit'] == TRUE )
				{				
					ipsRegistry::getclass('class_localization')->loadLanguageFile( array( 'public_lang' ), 'ipseo' );
					$rtn = str_replace( "<body id='ipboard_body'>", $this->registry->output->getTemplate('ipseo')->metaEditor( $metaTags, $req ) . "<body id='ipboard_body'>", $rtn );
				}
				
				//-----------------------------------------
				// Return
				//-----------------------------------------
				
				return $rtn;
			}
		} ]]></hooks_source>
    </file>
  </hookfiles>
  <hookextras_settings/>
  <hookextras_language/>
  <hookextras_modules/>
  <hookextras_help/>
  <hookextras_templates/>
  <hookextras_css/>
  <hookextras_tasks/>
  <hookextras_database_create/>
  <hookextras_database_alter/>
  <hookextras_database_update/>
  <hookextras_database_insert/>
</hookexport>
